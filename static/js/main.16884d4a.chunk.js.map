{"version":3,"sources":["style/Themes.js","context/AppReducer.js","context/GlobalStyles.js","context/GlobalState.js","components/Balance.js","components/Header.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["lightTheme","body","text","toggleBorder","background","darkTheme","AppReducer","state","action","type","transactions","filter","transaction","id","payload","GlobalStyles","createGlobalStyle","theme","initialState","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","sum","item","toFixed","Header","IncomeExpenses","amounts","income","acc","expense","className","Transaction","sign","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","setTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16884d4a.chunk.js","sourcesContent":["export const lightTheme = {\n    body: '#f7f7f7',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    background: '#363537',\n\n}\nexport const darkTheme = {\n    body: '#363537',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    background: '#999',\n}\n","const AppReducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload),\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [action.payload, ...state.transactions],\n            }\n        default: \n        return state;\n    }\n\n}\nexport default AppReducer;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle `\n    body { \n        background: ${({ theme }) => theme.body};\n        color: ${({ theme }) => theme.text};\n        font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n        transition: all 0.50s linear;\n    }\n    .inc-exp-container {\n        background: ${({ theme }) => theme.body};\n        transition: all 0.40s linear;\n    }\n`","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport {GlobalStyles} from './GlobalStyles'\n//initial State\nconst initialState = {\n    transactions : [\n          { id: 1, text: 'Flower', amount: -20 },\n          { id: 2, text: 'Salary', amount: 300 },\n          { id: 3, text: 'Book', amount: -25 },\n          { id: 4, text: 'Camera', amount: 150 },\n        ]\n}\n\n// Create Context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider =({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState)\n\n    //Actions\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id,\n        })\n    }\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction,\n        })\n    }\n    return (\n       \n    <GlobalContext.Provider value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n    }}>\n     <GlobalStyles />\n    { children }\n    </GlobalContext.Provider>\n    \n    \n    );\n}","import React, {useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const Balance = () => {\n    const { transactions } = useContext(GlobalContext);\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((sum, item) => (sum += item),0).toFixed(2);\n    return (\n        <div>\n            <h4>\n                Your Balance\n            </h4>\n            <h1 id='balance'>${total}</h1>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n","import React, {useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const IncomeExpenses = () => {\n    const { transactions } = useContext(GlobalContext);\n    const amounts = transactions.map(transaction => transaction.amount);\n    const income = amounts\n      .filter(item => item > 0)\n      .reduce((acc, item) => (acc += item), 0)\n      .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n    return (\n        <div className='inc-exp-container'>\n            <div>\n                <h4>Income</h4>\n                <p className= 'money plus'>${income}</p>\n            </div>\n            <div>\n             <h4>Expense</h4>\n             <p className= 'money minus'>${expense}</p>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext }from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const Transaction = ({ transaction }) => {\n    const sign = transaction.amount > 0 ? '+' : '-';\n    const { deleteTransaction } = useContext(GlobalContext);\n\n    return (\n        <li className={transaction.amount > 0 ? 'plus' : 'minus' }>\n            {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\n            <button onClick={() => deleteTransaction(transaction.id)} className='delete-btn'>x</button>\n        </li>\n    )\n}\n","import React, { useContext }from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { Transaction } from './Transaction'\nexport const TransactionList = () => {\n    const { transactions } = useContext(GlobalContext);\n    // console.log(context)\n    return (\n        <>\n            <h3>History</h3>\n            <ul id=\"list\" className=\"list\">\n                {transactions.map(transaction => (\n                   <Transaction key={transaction.id} transaction={transaction}/>\n                ))}\n            </ul>\n        </>\n    )\n}\n","import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const AddTransaction = () => {\n    const [text,setText] = useState('');\n    const [amount,setAmount] = useState(0);\n    \n    const { addTransaction } = useContext(GlobalContext);\n    const onSubmit = e => {\n        e.preventDefault();\n        const newTransaction = {\n            id: Math.floor(Math.random() * 1000000),\n            text,\n            amount: +amount\n        }\n        addTransaction(newTransaction);\n    }\n    return (\n        <>\n             <h3>Add new transaction</h3>\n                <form id=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                        <label htmlFor=\"text\">Text</label>\n                        <input type=\"text\" id=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\n                    </div>\n                    <div className=\"form-control\">\n                    <label htmlFor=\"amount\">Amount <br />(negative - expense, positive - income) </label>\n                        <input type=\"number\" id=\"amount\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n                    </div>\n                    <button className=\"btn\">Add transaction</button>\n                </form>\n        </>\n    )\n}\n","import React, { useState, } from \"react\";\nimport './style/App.css' \nimport { lightTheme, darkTheme } from \"./style/Themes\"\nimport { Balance } from './components/Balance'\nimport {Header} from './components/Header'\nimport { IncomeExpenses } from './components/IncomeExpenses'\nimport { TransactionList } from './components/TransactionList'\nimport { AddTransaction } from './components/AddTransaction'\nimport {GlobalProvider} from './context/GlobalState'\n// import { GlobalStyles } from \"./context/GlobalStyles\";\nimport {ThemeProvider} from \"styled-components\";\n\nlet App = () => {\n  const [theme, setTheme] = useState('light');\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n}\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <GlobalProvider>\n      \n       \n          <div className=\"header\">\n            <Header />\n            <label className=\"switch\">\n                <input type=\"checkbox\" onClick={themeToggler}/>\n                <span className=\"slider round\"></span>\n            </label>\n          \n          </div>\n            <div className=\"container\">\n              <Balance/>\n              <IncomeExpenses/>\n              <TransactionList />\n              <AddTransaction />\n            </div> \n          \n      \n      </GlobalProvider>\n    </ThemeProvider>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}